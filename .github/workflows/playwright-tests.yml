name: Playwright Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  find_tests:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.list_files.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Find test files
        id: list_files
        run: |
          # Find all spec files, create a safe name, format as JSON, and set as output
          TEST_FILES=$(find tests -name '*.spec.ts' | while read file; do
            # Generate a safe name by replacing non-alphanumeric/underscore/dash/dot chars with underscore and removing .spec.ts
            SAFE_NAME=$(echo "$file" | sed 's/[^a-zA-Z0-9._-]/_/g' | sed 's/\.\(spec\.ts\)$//');
            # Output JSON object for each file
            echo "{\"path\": \"$file\", \"safe_name\": \"$SAFE_NAME\"}";
          done | jq -s .)
          
          # Set the output for the matrix using a multi-line string format
          echo "matrix<<EOF" >> "$GITHUB_OUTPUT"
          echo "$TEST_FILES" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

  test:
    needs: [find_tests]
    timeout-minutes: 10
    strategy:
      matrix:
        include: ${{ needs.find_tests.outputs.matrix }}
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      # fetch-depth: 1 # Consider shallow clone if full history isn't needed
      with:
        fetch-depth: 0

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'  # Enable caching for faster installs

    - name: Get Playwright version
      id: playwright-version
      run: echo "PLAYWRIGHT_VERSION=$(npm ls @playwright/test --depth=0 --json | jq -r '.dependencies["@playwright/test"].version')" >> $GITHUB_OUTPUT
    - name: Cache Playwright browsers
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        # Cache key for all browsers
        key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.PLAYWRIGHT_VERSION }}-chromium

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium

    - name: Run Playwright tests
      run: |
        # Configure Playwright to output results into a directory named after the safe test name
        PLAYWRIGHT_OUTPUT_DIR="test-results-${{ matrix.safe_name }}"
        mkdir -p "$PLAYWRIGHT_OUTPUT_DIR"
        npx playwright test ${{ matrix.path }} --workers=1 --project=chromium --output="$PLAYWRIGHT_OUTPUT_DIR"
        # Optionally, generate HTML report directly into the output directory
        # npx playwright show-report "$PLAYWRIGHT_OUTPUT_DIR" --output="$PLAYWRIGHT_OUTPUT_DIR/playwright-report"

    - name: Create Combined Artifact
      if: always()
      run: |
        # The combined artifact is the Playwright output directory itself
        # Create a summary file within the output directory
        echo "Test Run Summary" > test-results-${{ matrix.safe_name }}/README.md
        echo "===============" >> test-results-${{ matrix.safe_name }}/README.md
        echo "" >> test-results-${{ matrix.safe_name }}/README.md
        echo "Run ID: ${{ github.run_id }}" >> test-results-${{ matrix.safe_name }}/README.md
        echo "Branch: ${{ github.ref }}" >> test-results-${{ matrix.safe_name }}/README.md
        echo "Commit: ${{ github.sha }}" >> test-results-${{ matrix.safe_name }}/README.md
        echo "" >> test-results-${{ matrix.safe_name }}/README.md
        echo "Test Configuration:" >> test-results-${{ matrix.safe_name }}/README.md
        echo "- Browser: Chromium" >> test-results-${{ matrix.safe_name }}/README.md
        echo "- Workers: 1" >> test-results-${{ matrix.safe_name }}/README.md
        echo "- Test File: ${{ matrix.path }}" >> test-results-${{ matrix.safe_name }}/README.md
        echo "- Artifact Safe Name: ${{ matrix.safe_name }}" >> test-results-${{ matrix.safe_name }}/README.md
        echo "" >> test-results-${{ matrix.safe_name }}/README.md
        echo "Contents:" >> test-results-${{ matrix.safe_name }}/README.md
        echo "- Playwright HTML Report: index.html (if generated in config)" >> test-results-${{ matrix.safe_name }}/README.md
        echo "- Test Results (including logs and screenshots): Contents of this directory" >> test-results-${{ matrix.safe_name }}/README.md

    - name: Upload Combined Artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.safe_name }}-${{ github.run_id }}
        path: test-results-${{ matrix.safe_name }}/
        retention-days: 7